Merged notes
===================
9792:
    - migrate-wydot_trac.sql added; probably should customize init_ctl to run that sql file?
9832; dmsxml OpQueryMsg:
    - the createSignMessageWithBitmap isn't using beacon, while it was changed
        to use beacon in the other locations; may want to look into that
    - when message doesnt have text and not rendered bitmap, duration has changed
        to duramins instead of null; I'm assuming that's to accomodate beacon +
        empty message, so leaving it; but could have been introduced by accident
9874: 
    - Doug renamed to WordTableModel
9846, 9847:
    - Conflicts with Doug's "Cleaned up code for building map segments." Segment constructor has
        changed, but looks like upstream node is now "station node". New terminology appears to be:
        - station node: previously "upstream"; the root node
        - upstream node: previously "previous"; the upstream node of the segment
        - pl,ul/loc,dl has become al,bl: corresponding to locations of upstream/downstream nodes of the segment
    - I've reintroduced saving station/(previously "upstream") as a member. The toString method locations
        aren't serialized the same... now they're Mercator coordinates instead. Would need to store
        the old MapGeoLoc data again if we want plaintext names (now achieved by
        GeoLocHelper.getLocation()->String). I've also changed tooDistance to "good" in toString.
        Looks like just debugging toString info, so probably not important.
    - SegmentLayerState has new ParkingSpace in left click handler; may want to switch that to
        use station node too?
9829:
    - Keeping Doug's implementation of textLabel (cross street + landmark), as it is nearly the same now;
        just changed separator to " / "
    - didn't see SegmentBuilder.getDetectors being used, so left as deleted in Doug's branch
9845:
    - fixed in Doug's branch as well, commit "Removed abandoned column from r_node table."
    - just adding the extra logging/comments
9983:
    - quick message has become msg_pattern; keeping Doug's change there
9840:
    Weather sensor stuff that might conflict in Doug branch:
    client:
        WeatherSensorTab, WeatherSensorProperties, WeatherSensorModel: no changes
        WeatherSensorManager, WeatherSensorTheme: just minor cleanup, shouldn't be problematic
    server:
        WeatherSensorImpl: conflicts, but seem to be minor
        WeatherSensorHelper: new file
    - Doug "Cleaned up ESS (RWIS) code" changes folder structure:
        Moved to tms/server/comm/ntcip/mib1204:
            tms/PavementSensorError
            tms/SubSurfaceSensorError
            tms/server/comm/ntcip/EssRec
            tms/server/comm/ntcip/PavementSensorsTable
            tms/server/comm/ntcip/SubSurfaceSensorsTable
            tms/server/comm/ntcip/TemperatureSensorsTable
    - EssRec git timeline:
        - Doug modified a lot of the temperature functionality it seems
        - sensor data functionality been split out into multiple XXXValues classes, the one we're interestd
            in is AtmosphericValues. It is tkaing the conversion/getters for air_pressure/visiblitity/visbilitySituation
            and grouping them into that class. Additionally, it adds toJson method. The air_pressure var has been
            renamed to atomspheric_pressure. The actual implementations have not changed.
    - OpQueryEssStatus git timeline:
        - "Moved QueryElevation phase to OpQueryEssSettings operation": the "Elevation" query has been combined
            with the "Visiblitity" query. Only atomspheric pressure is kept; essReferenceHeight, essPressureHeight,
            essWindSensorHeight are removed.
        - "Added AtmosphericValues class": Elevation query modified again, this time mess.add/log take values from
            a new atmospheric_values value. The storeXXX calls have been removed. Seems around the commit
            "Cleaned up PavementSensorsTable." is when Doug starts reorganizing and removing storeXXX calls.
        - So the storeXXX calls got wrapped into a single ess_rec.store() call in a FinalPhase; that happened
            in commit "Added WindSensorValues class."
        - Later, the final phase was eliminated, and instead ess_rec.store() is now called in cleanup method, 
            and there, only if the operation was a success
        - Storage is now using JSON format
    So appears this patch can be applied without problems, but will need to refactor to fit the new code
        - erh -> ref_height; prh -> pressure_height; these used to be present in OpQueryEssStatus but
            got removed; so re-adding to OpQueryEssStatus them to the message query
        - Doug added convertRefElevation and new HeightObject class which is similar idea to convertHeight;
            those are in AtmosphericValues; keeping Doug's code
        - May want to add the pressure at sea level values to AtmosphericValues.toJson?
9837:
    - QuerySubSurfaceTable: sensor type, location, and depth have been removed; moisture moved to
        the next phase; may want to reintroduce them (actually, I think those were moved to 
        OpQueryEssSettings now)
    - Assuming the exception is triggered by querying sr.sensor_error, so not adding to the new
        moisture phase
9863:
    - PavementSensorType: divergent implementations, keeping Doug's, but adding the ordinal conversion
        TODO: can ASN1Enum be used instead?
    - subsurf_temp is fetched, but never used; maybe a bug, leaving commented for now
        e.g. should we save that value inside the storeSubSurface method?
    - getPavementSensorError checks for none/undefined now, so not including hasPvmtSensErr -
        added/reintroduced PavementSensorError/PavementSensorType/SurfaceStatus.fromOrdinal to allow the
        logging (seems Doug removed it somewhere to simplify?); logging for PavementSensorType is
        now in OpQueryEssSettings instead
    - PavementSensorType not being queried anymore (should we reintroduce?) so not including the
        logging for that one
    - ControllerImpl version now is grouped with the setup JSON; so I've added some methods to extract
        version from the JSON to allow for EssType detection
    - OpQuerySystem was added in "Removed SNMP `sys_*` values from RWIS settings". All the system
        settings were moved to there. The settings are not actually getting saved though, so can't
        make use of them to extract High Sierra version string. OpQueryModules also writes to
        setup (setSetupNotify call), and it includes a version key, so it is not safe to write
        version directly, will need to use a different key. I suppose just "sys_desc" will work.
9891:
    - Doug "Moved PrecipSituation to ntcip/mib1204/EssPrecipSituation" and 
        "Changed WeatherSensor precipSituation attribute from Integer to String type." make these
        changes mostly obsolete. Just adding the row to client. Adding generic formatEnum
9905:
    - not going to remove temperature table from OpQueryEssSettings
    - WeatherSensorImpl changed via Doug's "Changed WeatherSensor pvmtSurfStatus attribute from Integer to String type."
      To simplify the code, the enums now get saved as pre-serialized strings to WeatherImpl. The problem with that is
      you can't efficiently map to a different string representation, e.g. for CSV export or i18n. Ideally, you'd just
      keep it the raw type, e.g. PvmtSurfaceStatus object or whatever. I'm not sure what the implications of that are
      and why that wasn't done. I agree with Michael's implementation that if you need custom serialization and its
      going to be stored in Java memory, might as well stick it directly on the enum. I see in later revisions he added
      "from" method to convert from WeatherSensor to enum, which is what I would probably do too. I will switch back to
      Integers, but just for whatever code affects Michael's, to try to minimize the amount of incompatibility.
    - added toStringValid methods to SurfaceStatus/PrecipSituation, simplifies serialization in some places
9912:
    - Doug's PavementSensorsTable has surface water depth already, just adding the logging
    - MIB1204 changes already merged
    - tweaks to make it fit with existing code better
9931:
    - I believe this code is wrong: no longer checks for == 255, checking null when can't be null.
        It is also difficult to add this logging since it is no longer CSV specific. I will add
        the enforcmenet+logging to PavementSensorsTable, but may want to revisit
        (seems like code is revised in 9947 again)

Skipped
==================
9852:
    - adds additional DmsMessagePriority to allowed types; Doug has reworked the
        priority system completely, now it is SignMsgPriority with differen enum
        values; may want to double check if that's a problem
9853:
    - Doug introduced LineMultiNormalizer which appears to strip fonts by default now;
        updated test case seems to validate that
9785, 9791:
    - updating hgignore... figure we can update gitignore as we go easily later on if needed
9857, 9861, 9870, 9881, 9886, 9910, 9921, 9927, 9942, 9944, 9955, 9959, 9961, 9965, 9969, 9972, 9976, 9981, 9992, 9995, 10018, 10034, 10040, 10044, 10047, 10051, 10057, 10062
    - updating .hgtags; can add via git tag later if needed
9786:
    - changes build via mercurial; not relevant to git
9893, 9937, 9894, 9896, 9938, 9962, 9973, 9982, 9996, 9997, 9998, 9999, 10000, 10001, 10002, 10010, 10012, 10014, 10015, 10054:
    - webapp patches, which should go in an Iteris specific repo
10021:
    - json.org jar already in existing ant build
9855, 9879, 9918, 10013:
    - these are for install_jars[_client].sh; would go into iris specific repo I think, or else
        will be unnecessary if we switch to doing containerized install instead
9794, 9812, 9872, 9876, 10016, 10028:
    - already merged
9838:
    - Doug implemented same/very similar thing
9841:
    - EscRec has been broken out into different classes; the non-integer types are exposed on those
        classes, so doesn't seem like a good idea to change them all now to use integer. In any case,
        the code, at least for EscRec when considered individually, appears simpler now with the
        abstraction; so perhaps its purpose is served

TODO
===================
9900, 9923:
    - seem simple to add, just want to understand what ExternMap stuff is for first
9795, 10007:
    - divergent DMS implementation
9796:
    - depends on DMSHelper.getLandmark, patch 9795
10055:
    - BeaconXmlWriter and BeaconXmlJob don't appear in git, while they have Douglas name on them;
        need to figure out what is up with those

Weather Patches Cluster:
------------------------
- big commits: 9947/9949, 9985/9986, 10022; I suspect 10022 is just renaming files so should be easy;

9947:
    - Doug implemented similar SurfaceBlackIceSignal/VisibilitySituation class
    - I'll add the fromOrdinal methods as they're needed, as well as my toStringValid method
    - swdToN units I think are messed up; e.g. 1mm*10 != .1mm; I'm going to leave the code
        as is with x100 multiplier, but may want to double check later
    - Doug/Michael both did a lot of refactoring on the table/values design. Starting to
        see more drastic differences here. I think I will not add the methods from Michael's
        version unless we know theyre getting called and there isn't a similar interface in
        Doug's version.
    - MIB1204 already merged
    - OpQueryEssStatus: all temp/pvmt rows are already getting queried; some newly added fields
        already queried, so just adding logging there; adding pavement temp depth, sensor model



TODO after all else
===================
9914:
    - adds json-simple to build... add later if we see dependency is still needed
9790, 9966, 10017, 9909, 9869, 10046, 9839, 10033, 9877, 9920, 10043, 9941 TODO/LAST
    - just copied over i18n WY.properties
    - I double checked messages_en.properties timeline to see if any of the property
        names had changed since 2016:
        - help.exception.lastline/wydot.trac.host are new; verify they are being used I guess
        - dms.beacon.enabled changed to Flash Beacon; leaving as is, since was customized by WY anyways
